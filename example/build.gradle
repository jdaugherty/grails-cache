buildscript {
    repositories {
        maven { url = 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath platform("org.grails:grails-bom:$grailsVersion")
        classpath 'org.grails:grails-gradle-plugin'
    }
}


plugins {
    id "groovy"
    id "idea"
    id "eclipse"
}

version = projectVersion
group = "com.demo"

apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

compileJava.options.release = 17

dependencies {
    implementation "org.grails:grails-bom:${grailsVersion}"

    implementation project(':plugin')

    implementation "org.grails:grails-core"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails.plugins:gsp"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    console "org.grails:grails-console"

    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "org.fusesource.jansi:jansi"

    integrationTestImplementation testFixtures("org.grails.plugins:geb")

    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.spockframework:spock-core"
}

bootRun {
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

apply from: rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/test-config.gradle')

// no groovy doc for example
tasks.withType(Groovydoc).configureEach {
    enabled = false
}